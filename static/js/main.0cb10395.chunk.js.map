{"version":3,"sources":["Components/Share.jsx","Components/LikeFB.jsx","utils/baseUrl.js","Components/Home.jsx","Components/Header.jsx","Components/MapContainer.jsx","Components/MapPage.jsx","App.js","serviceWorker.js","index.js"],"names":["ShareComponent","props","shareBlockProps","url","button","ShareButtonRectangle","buttons","network","icon","FaTwitter","FaFacebook","text","longtext","address","LikeFB","appId","href","this","colorScheme","showFaces","Component","baseUrl","Home","useState","restaurants","setRestaurant","useEffect","a","fetch","response","json","data","fetchdata","Container","className","onChange","e","target","value","prevRest","sorted","sort","b","rating","name","Row","map","item","Col","key","id","md","Card","CardHeader","CardImg","top","width","src","alt","CardBody","CardTitle","CardSubtitle","CardText","street","city","state","contact","site","email","phone","role","CardFooter","Share","Header","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","MapContainer","onMarkerClick","marker","setState","selectedPlace","activeMarker","showingInfoWindow","onMapClicked","mapProps","event","markers","lat","latLng","lng","locationChanged","google","zoom","onClick","initialCenter","style","height","position","restaurant","location","visible","GoogleApiWrapper","apiKey","MapPage","setRestaurants","readyRestaurants","setReadyRestaurants","radius","setRadius","deviation","setDeviation","average","setAverage","setLocation","filterRestaurantsByRadius","filteredResturants","filter","pointA","pointB","lat1","latitude","lon1","longitude","lat2","lon2","φ1","Math","PI","φ2","Δφ","Δλ","sin","cos","atan2","sqrt","calculateDistance","updateLocations","mean","reduce","sum","length","variance","pow","val","dev","console","log","App","path","exact","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0TAqBeA,EAfQ,SAAAC,GACrB,IAAMC,EAAkB,CACtBC,IAAKF,EAAME,IACXC,OAAQC,uBACRC,QAAS,CACP,CAAEC,QAAS,UAAWC,KAAMC,KAC5B,CAAEF,QAAS,WAAYC,KAAME,MAE/BC,KAAK,+BAAD,OAAiCV,EAAMU,MAC3CC,SAAS,mBAAD,OAAqBX,EAAMY,UAGrC,OAAO,kBAAC,qBAAuBX,I,gDCfZY,E,iLAEjB,OACE,kBAAC,mBAAD,CAAkBC,MAAM,mBACtB,kBAAC,OAAD,CAAMC,KAAMC,KAAKhB,MAAME,IAAKe,YAAY,OAAOC,WAAS,S,GAJ5BC,aCHvBC,EAAS,4DC6GPC,EA1FF,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACVC,EADU,KACGC,EADH,KAGjBC,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEACOC,MAAMP,GADb,cACVQ,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhBN,EAAcM,GAHE,2CAAH,qDAKfC,KACC,IAgBH,OACE,kBAACC,EAAA,EAAD,KACE,6BAEA,4BAAQC,UAAU,eAAeC,SAlBhB,SAAAC,GACI,WAAnBA,EAAEC,OAAOC,MACXb,GAAc,SAAAc,GACZ,IAAMC,EAASD,EAASE,MAAK,SAACd,EAAGe,GAAJ,OAAWf,EAAEgB,OAASD,EAAEC,OAAS,GAAK,KACnE,OAAO,YAAIH,MAGbf,GAAc,SAAAc,GACZ,IAAMC,EAASD,EAASE,MAAK,SAACd,EAAGe,GAAJ,OAAWf,EAAEiB,KAAOF,EAAEE,KAAO,GAAK,KAC/D,OAAO,YAAIJ,QAUX,4BAAQF,MAAM,IAAd,iBACA,4BAAQA,MAAM,UAAd,sBACA,4BAAQA,MAAM,UAAd,uBAEF,6BAEA,kBAACO,EAAA,EAAD,KACGrB,EAAYsB,KAAI,SAAAC,GAAI,OACnB,kBAACC,EAAA,EAAD,CAAKC,IAAKF,EAAKG,GAAIC,GAAI,GACrB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,SAAcN,EAAKH,MAEnB,kBAACU,EAAA,EAAD,CACEC,KAAG,EACHC,MAAM,OACNC,IAAI,wCACJC,IAAKX,EAAKH,OAEZ,kBAACe,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,sCAAYb,EAAKJ,SAEnB,kBAACkB,EAAA,EAAD,KACE,0CAEF,kBAACC,EAAA,EAAD,KACGf,EAAKlC,QAAQkD,OADhB,IACyBhB,EAAKlC,QAAQmD,KADtC,IAC6CjB,EAAKlC,QAAQoD,OAE1D,kBAACJ,EAAA,EAAD,KACE,yCAEF,kBAACC,EAAA,EAAD,KAAWf,EAAKmB,QAAQC,KAAxB,KACA,kBAACL,EAAA,EAAD,KAAWf,EAAKmB,QAAQE,MAAxB,KACA,kBAACN,EAAA,EAAD,KAAWf,EAAKmB,QAAQG,MAAxB,KACA,uBACEnC,UAAU,kBACVlB,KAAM+B,EAAKmB,QAAQC,KACnBG,KAAK,UAHP,cAQF,kBAACC,EAAA,EAAD,CAAYrC,UAAU,cACpB,kBAAC,EAAD,CAAQ/B,IAAK4C,EAAKmB,QAAQC,OAE1B,kBAACK,EAAD,CACErE,IAAK4C,EAAKmB,QAAQC,KAClBxD,KAAMoC,EAAKH,KACX/B,QAAO,UAAKkC,EAAKlC,QAAQkD,OAAlB,YAA4BhB,EAAKlC,QAAQmD,KAAzC,YAAiDjB,EAAKlC,QAAQoD,kB,QC9DxEQ,EAjCA,kBACb,yBAAKvC,UAAU,+CACb,uBAAGA,UAAU,eAAelB,KAAK,KAAjC,gBAGA,4BACEkB,UAAU,iBACVwC,KAAK,SACLC,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAM7C,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BgB,GAAG,0BAC3C,wBAAIhB,UAAU,sBACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,YACX,kBAAC,IAAD,CAAM8C,GAAG,KAAT,YAGJ,wBAAI9C,UAAU,YACZ,uBAAGA,UAAU,YACX,kBAAC,IAAD,CAAM8C,GAAG,QAAT,c,QCrBNC,E,YACJ,WAAYhF,GAAQ,IAAD,8BACjB,4CAAMA,KAURiF,cAAgB,SAACjF,EAAOkF,EAAQ/C,GAC9B,EAAKgD,SAAS,CACZC,cAAepF,EACfqF,aAAcH,EACdI,mBAAmB,KAfJ,EAkBnBC,aAAe,SAACC,EAAU3C,EAAK4C,GACT,EAAKzB,MAAjB0B,QADgC,IAElCC,EAAMF,EAAMG,OAAOD,MACnBE,EAAMJ,EAAMG,OAAOC,MAEzB,EAAK7F,MAAM8F,gBAAgB,CAAEH,MAAKE,QAElC,EAAKV,SAAS,CACZD,OAAQ,CAAES,MAAKE,UAxBjB,EAAK7B,MAAQ,CACX+B,OAAQ,EAAK/F,MAAM+F,OACnBT,mBAAmB,EACnBJ,OAAQ,GACRG,aAAc,GACdD,cAAe,IAPA,E,sEA8BT,IAAD,OACP,OACE,oCACE,kBAAC,MAAD,CACEW,OAAQ/E,KAAKgD,MAAM+B,OACnBC,KAAM,GACNC,QAASjF,KAAKuE,aACdW,cAAe,CAAEP,IAAK,mBAAoBE,KAAM,mBAChDM,MAAO,CACL5C,MAAO,MACP6C,OAAQ,SAGV,kBAAC,SAAD,CACEH,QAASjF,KAAKiE,cACdoB,SAAUrF,KAAKgD,MAAMkB,OACrBvC,KAAK,wBAGN3B,KAAKhB,MAAM8B,KAAKe,KAAI,SAAAyD,GAAU,OAC7B,kBAAC,SAAD,CACEtD,IAAKsD,EAAWrD,GAChBgD,QAAS,EAAKhB,cACdoB,SAAU,CACRV,IAAKW,EAAW1F,QAAQ2F,SAASZ,IACjCE,IAAKS,EAAW1F,QAAQ2F,SAASV,KAEnClD,KAAM2D,EAAW3D,UAIrB,kBAAC,aAAD,CACEuC,OAAQlE,KAAKgD,MAAMqB,aACnBmB,QAASxF,KAAKgD,MAAMsB,mBAEpB,6BACE,4BAAKtE,KAAKgD,MAAMoB,cAAczC,c,GAnEjBxB,aA4EZsF,6BAAiB,CAC9BC,OAAQ,2CADKD,CAEZzB,GC2DY2B,EA5IC,WAAO,IAAD,EACkBrF,mBAAS,IAD3B,mBACbC,EADa,KACAqF,EADA,OAE4BtF,mBAAS,IAFrC,mBAEbuF,EAFa,KAEKC,EAFL,OAGQxF,mBAAS,GAHjB,mBAGbyF,EAHa,KAGLC,EAHK,OAIc1F,mBAAS,GAJvB,mBAIb2F,EAJa,KAIFC,EAJE,OAKU5F,mBAAS,GALnB,mBAKb6F,EALa,KAKJC,EALI,OAMY9F,mBAAS,IANrB,mBAMbiF,EANa,KAMHc,EANG,KAQpB5F,qBAAU,YACO,uCAAG,8BAAAC,EAAA,sEACOC,MAAMP,GADb,cACVQ,EADU,gBAEGA,EAASC,OAFZ,OAEVC,EAFU,OAGhB8E,EAAe9E,GAHC,2CAAH,qDAKfC,KACC,IAEH,IAuBMuF,EAA4B,WAChC,IAAMC,EAAqBhG,EAAYiG,QAAO,SAAAlB,GAa5C,OArCsB,SAACmB,EAAQC,GACjC,IAAMC,EAAOF,EAAOG,SACdC,EAAOJ,EAAOK,UAEdC,EAAOL,EAAOE,SACdI,EAAON,EAAOI,UAGdG,EAAKN,GAAQO,KAAKC,GAAK,KACvBC,EAAKL,GAAQG,KAAKC,GAAK,KACvBE,GAAMN,EAAOJ,IAASO,KAAKC,GAAK,KAChCG,GAAMN,EAAOH,IAASK,KAAKC,GAAK,KAEhCzG,EACJwG,KAAKK,IAAIF,EAAK,GAAKH,KAAKK,IAAIF,EAAK,GACjCH,KAAKM,IAAIP,GAAMC,KAAKM,IAAIJ,IAAOF,KAAKK,IAAID,EAAK,GAAKJ,KAAKK,IAAID,EAAK,IAKlE,OAbU,QAUA,EAAIJ,KAAKO,MAAMP,KAAKQ,KAAKhH,GAAIwG,KAAKQ,KAAK,EAAIhH,KAgBlCiH,CARa,CAC5Bf,SAAUtB,EAAW1F,QAAQ2F,SAASZ,IACtCmC,UAAWxB,EAAW1F,QAAQ2F,SAASV,KAEb,CAC1B+B,SAAUrB,EAASZ,IACnBmC,UAAWvB,EAASV,QAMFkB,KAEtBD,EAAoBS,IAGtB9F,qBAAU,WACRmH,MACC,CAAC/B,IAEJ,IAIM+B,EAAkB,WACtB,IAAMC,EACJhC,EACGhE,KAAI,SAAAyD,GAAU,OAAIA,EAAW5D,UAC7BoG,QAAO,SAACC,EAAK1G,GAAN,OAAgB0G,EAAM1G,IAAO,GAAKwE,EAAiBmC,OAC/D5B,EAAWyB,GACX,IAAMI,EACJpC,EACGhE,KAAI,SAAAyD,GAAU,OAAI4B,KAAKgB,IAAI5C,EAAW5D,OAASmG,EAAM,MACrDC,QAAO,SAACC,EAAKI,GAAN,OAAcJ,EAAMI,IAAK,GAAKtC,EAAiBmC,OACrDI,EAAMlB,KAAKQ,KAAKO,GACtB/B,EAAakC,IAQf,OACE,kBAACpH,EAAA,EAAD,qEAEE,6BACA,6BAHF,wEAKE,2BACEyC,KAAK,SACLxC,UAAU,eACVC,SAhCe,SAAAC,GACnB6E,EAAU7E,EAAEC,OAAOC,QAgCfA,MAAO0E,IAET,6BACA,4BACE9E,UAAU,eACVgE,QAAS,WACPqB,MAGD,IANH,aASA,6BACA,6BACCT,EAAiBmC,OAAS,EACzB,6BACE,gFACgD,IAC7CnC,EAAiBmC,QAEpB,2FAC8D,IAC3D7B,GAGH,yDACsB,IACnBF,IAIL,0CAEF,6BACA,kBAACrE,EAAA,EAAD,KAEI,kBAAC,EAAD,CACEd,KAAM+E,EACNf,gBArDuB,SAAAS,GAC/Bc,EAAYd,GACZ8C,QAAQC,IAAI/C,S,QClEDgD,EAhBH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,GACnB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAQD,KAAK,OAAOC,OAAK,GACvB,kBAAC,EAAD,UCHUC,QACW,cAA7BC,OAAOpD,SAASqD,UAEe,UAA7BD,OAAOpD,SAASqD,UAEhBD,OAAOpD,SAASqD,SAASC,MACvB,2D,OCVNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SDyH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.0cb10395.chunk.js","sourcesContent":["\nimport React from 'react';\nimport {FaTwitter} from \"react-icons/fa/\";\nimport {FaFacebook} from \"react-icons/fa/\";\nimport { ShareButtonRectangle, ShareBlockStandard } from \"react-custom-share\";\n\nconst ShareComponent = props => {\n  const shareBlockProps = {\n    url: props.url,\n    button: ShareButtonRectangle,\n    buttons: [\n      { network: \"Twitter\", icon: FaTwitter },\n      { network: \"Facebook\", icon: FaFacebook }\n    ],\n    text: `Visitanos cuando quieras en ${props.text}`,\n    longtext: `Encuentranos en ${props.address}`\n  };\n\n  return <ShareBlockStandard {...shareBlockProps} />;\n};\n\nexport default ShareComponent;\n","import React, { Component } from \"react\";\nimport { FacebookProvider, Like } from \"react-facebook\";\n\nexport default class LikeFB extends Component {\n  render() {\n    return (\n      <FacebookProvider appId=\"717589285046812\">\n        <Like href={this.props.url} colorScheme=\"dark\" showFaces />\n      </FacebookProvider>\n    );\n  }\n}\n","export const baseUrl =\"https://json-server-now.javierfuentesm.now.sh/restaurants\";\n","import { useState, useEffect } from \"react\";\nimport React from \"react\";\nimport {\n  Card,\n  CardHeader,\n  CardImg,\n  CardTitle,\n  CardText,\n  CardSubtitle,\n  CardBody,\n  Container,\n  CardFooter,\n  Col,\n  Row\n} from \"reactstrap\";\nimport ShareComponent from \"./Share\";\nimport LikeFB from \"./LikeFB\";\nimport { baseUrl } from \"../utils/baseUrl\";\n\nconst Home = () => {\n  const [restaurants, setRestaurant] = useState([]);\n\n  useEffect(() => {\n    const fetchdata = async () => {\n      const response = await fetch(baseUrl);\n      const data = await response.json();\n      setRestaurant(data);\n    };\n    fetchdata();\n  }, []);\n\n  const handleChange = e => {\n    if (e.target.value === \"rating\") {\n      setRestaurant(prevRest => {\n        const sorted = prevRest.sort((a, b) => (a.rating < b.rating ? 1 : -1));\n        return [...sorted];\n      });\n    } else {\n      setRestaurant(prevRest => {\n        const sorted = prevRest.sort((a, b) => (a.name > b.name ? 1 : -1));\n        return [...sorted];\n      });\n    }\n  };\n\n  return (\n    <Container>\n      <br></br>\n\n      <select className=\"form-control\" onChange={handleChange}>\n        <option value=\"\">Ordenar por :</option>\n        <option value=\"rating\">Ordenar por rating</option>\n        <option value=\"nombre\">Ordenar por Nombre</option>\n      </select>\n      <br></br>\n\n      <Row>\n        {restaurants.map(item => (\n          <Col key={item.id} md={4}>\n            <Card>\n              <CardHeader> {item.name}</CardHeader>\n\n              <CardImg\n                top\n                width=\"100%\"\n                src=\"https://picsum.photos/740/420/?random\"\n                alt={item.name}\n              />\n              <CardBody>\n                <CardTitle>\n                  <h3>Rating {item.rating}</h3>\n                </CardTitle>\n                <CardSubtitle>\n                  <h5>Direccion</h5>\n                </CardSubtitle>\n                <CardText>\n                  {item.address.street} {item.address.city} {item.address.state}\n                </CardText>\n                <CardSubtitle>\n                  <h5>Contacto</h5>\n                </CardSubtitle>\n                <CardText>{item.contact.site} </CardText>\n                <CardText>{item.contact.email} </CardText>\n                <CardText>{item.contact.phone} </CardText>\n                <a\n                  className=\"btn btn-primary\"\n                  href={item.contact.site}\n                  role=\"button\"\n                >\n                  Sitio Web\n                </a>\n              </CardBody>\n              <CardFooter className=\"text-muted\">\n                <LikeFB url={item.contact.site} />\n\n                <ShareComponent\n                  url={item.contact.site}\n                  text={item.name}\n                  address={`${item.address.street} ${item.address.city} ${item.address.state}`}\n                />\n              </CardFooter>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = () => (\n  <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a className=\"navbar-brand\" href=\"#\">\n      Restaurantes\n    </a>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarSupportedContent\"\n      aria-controls=\"navbarSupportedContent\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav mr-auto\">\n        <li className=\"nav-item active\">\n          <a className=\"nav-link\">\n            <Link to=\"/\">Inicio</Link>\n          </a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link\">\n            <Link to=\"/map\">Mapa</Link>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </nav>\n);\nexport default Header;\n","import React, { Component } from \"react\";\nimport {\n  Map,\n  GoogleApiWrapper,\n  Marker,\n  InfoWindow\n} from \"google-maps-react\";\n\nclass MapContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      google: this.props.google,\n      showingInfoWindow: false,\n      marker: {},\n      activeMarker: {},\n      selectedPlace: {}\n    };\n  }\n\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  };\n  onMapClicked = (mapProps, map, event) => {\n    const { markers } = this.state;\n    const lat = event.latLng.lat();\n    const lng = event.latLng.lng();\n\n    this.props.locationChanged({ lat, lng });\n\n    this.setState({\n      marker: { lat, lng }\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Map\n          google={this.state.google}\n          zoom={15}\n          onClick={this.onMapClicked}\n          initialCenter={{ lat: 19.440057053713137, lng: -99.12704709742486 }}\n          style={{\n            width: \"70%\",\n            height: \"100%\"\n          }}\n        >\n          <Marker\n            onClick={this.onMarkerClick}\n            position={this.state.marker}\n            name=\"Posición inicial\"\n          />\n\n          {this.props.data.map(restaurant => (\n            <Marker\n              key={restaurant.id}\n              onClick={this.onMarkerClick}\n              position={{\n                lat: restaurant.address.location.lat,\n                lng: restaurant.address.location.lng\n              }}\n              name={restaurant.name}\n            />\n          ))}\n\n          <InfoWindow\n            marker={this.state.activeMarker}\n            visible={this.state.showingInfoWindow}\n          >\n            <div>\n              <h1>{this.state.selectedPlace.name}</h1>\n            </div>\n          </InfoWindow>\n        </Map>\n      </>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCmjvkXB_DMnBUNwxQztLMStyQmA_szbNw\"\n})(MapContainer);\n","import React, { useState, useEffect } from \"react\";\nimport { baseUrl } from \"../utils/baseUrl\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport MapContainer from \"./MapContainer\";\n\nconst MapPage = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [readyRestaurants, setReadyRestaurants] = useState([]);\n  const [radius, setRadius] = useState(0);\n  const [deviation, setDeviation] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [location, setLocation] = useState({});\n\n  useEffect(() => {\n    const fetchdata = async () => {\n      const response = await fetch(baseUrl);\n      const data = await response.json();\n      setRestaurants(data);\n    };\n    fetchdata();\n  }, []);\n\n  const calculateDistance = (pointA, pointB) => {\n    const lat1 = pointA.latitude;\n    const lon1 = pointA.longitude;\n\n    const lat2 = pointB.latitude;\n    const lon2 = pointB.longitude;\n\n    const R = 6371e3; // earth radius in meters\n    const φ1 = lat1 * (Math.PI / 180);\n    const φ2 = lat2 * (Math.PI / 180);\n    const Δφ = (lat2 - lat1) * (Math.PI / 180);\n    const Δλ = (lon2 - lon1) * (Math.PI / 180);\n\n    const a =\n      Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n      Math.cos(φ1) * Math.cos(φ2) * (Math.sin(Δλ / 2) * Math.sin(Δλ / 2));\n\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n    const distance = R * c;\n    return distance;\n  };\n\n  const filterRestaurantsByRadius = () => {\n    const filteredResturants = restaurants.filter(restaurant => {\n      const restaurantCoordinates = {\n        latitude: restaurant.address.location.lat,\n        longitude: restaurant.address.location.lng\n      };\n      const locationCoordinates = {\n        latitude: location.lat,\n        longitude: location.lng\n      };\n      const distance = calculateDistance(\n        restaurantCoordinates,\n        locationCoordinates\n      );\n      return distance <= +radius;\n    });\n    setReadyRestaurants(filteredResturants);\n  };\n\n  useEffect(() => {\n    updateLocations();\n  }, [readyRestaurants]);\n\n  const handleChange = e => {\n    setRadius(e.target.value);\n  };\n\n  const updateLocations = () => {\n    const mean =\n      readyRestaurants\n        .map(restaurant => restaurant.rating)\n        .reduce((sum, value) => sum + value, 0) / readyRestaurants.length;\n    setAverage(mean);\n    const variance =\n      readyRestaurants\n        .map(restaurant => Math.pow(restaurant.rating - mean, 2))\n        .reduce((sum, val) => sum + val, 0) / readyRestaurants.length;\n    const dev = Math.sqrt(variance);\n    setDeviation(dev);\n  };\n\n  const onLocationChangedHandler = location => {\n    setLocation(location);\n    console.log(location);\n  };\n\n  return (\n    <Container>\n      Selecciona el punto de partida inicial dando click en el mapa\n      <br></br>\n      <br />\n      Ingresa el radio de tu búsqueda a partir de tu posición inicial\n      <input\n        type=\"number\"\n        className=\"form-control\"\n        onChange={handleChange}\n        value={radius}\n      />\n      <br />\n      <button\n        className=\"form-control\"\n        onClick={() => {\n          filterRestaurantsByRadius();\n        }}\n      >\n        {\" \"}\n        Encontrar\n      </button>\n      <br />\n      <br />\n      {readyRestaurants.length > 0 ? (\n        <div>\n          <div>\n            Número total de restaurantes en el radio dado{\" \"}\n            {readyRestaurants.length}\n          </div>\n          <div>\n            Promedio de rating de restaurantes en el rango seleccionado{\" \"}\n            {average}\n          </div>\n\n          <div>\n            Desviación Estándar{\" \"}\n            {deviation}\n          </div>\n        </div>\n      ) : (\n        \"Aún no has hecho ninguna búsqueda\"\n      )}\n      <br />\n      <Row>\n\n          <MapContainer\n            data={readyRestaurants}\n            locationChanged={onLocationChangedHandler}\n          />\n      </Row>\n    </Container>\n  );\n};\nexport default MapPage;\n","import React from \"react\";\nimport Home from \"./Components/Home\";\nimport Header from \"./Components/Header\";\nimport MapPage from './Components/MapPage';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route  path=\"/map\" exact>\n          <MapPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}